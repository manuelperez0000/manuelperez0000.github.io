{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["web3","Web3","App","a","console","log","window","ethereum","request","accounts","onClick","isConnected","alert","eth","getBalance","then","r","utils","fromWei","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+oBAGMA,EAAO,IAAIC,IAFA,mDAkDFC,MA9Cf,WAAe,4CAEd,4BAAAC,EAAA,6DACEC,QAAQC,IAAI,aADd,SAIGD,QAAQC,IAAI,uBAJf,SAK4BC,OAAOC,SAASC,QAAQ,CAAC,OAAS,wBAL9D,OAKWC,EALX,OAMKL,QAAQC,IAAII,EAAS,IAN1B,gDAQGL,QAAQC,IAAR,MARH,0DAFc,sBAiCb,OACE,gCACE,wBAAQK,QAnCE,WAAD,gCAmCT,qBADF,eAGE,wBAAQA,QAtBZ,WACEN,QAAQC,IAAI,eAqBV,wBAEA,wBAAQK,QAdZ,WACKJ,OAAOC,SAASI,cACjBC,MAAM,MAENA,MAAM,OAUN,wBAEA,wBAAQF,QAtBZ,WACEV,EAAKa,IAAIC,WAvBK,8CAuBiBC,MAAK,SAACC,GACnCZ,QAAQC,IAAIL,EAAKiB,MAAMC,QAAQF,EAAE,cAoBjC,6BClCSG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.ab1bf075.chunk.js","sourcesContent":["import Web3 from 'web3';\nconst provider = 'https://data-seed-prebsc-1-s1.binance.org:8545/'\nconst myAddress = '0x20a4DaBC7C80C1139Ffc84C291aF4d80397413Da'\nconst web3 = new Web3(provider)\n\nfunction App() {\n \n async function connect(){\n   console.log(\"conecting\")\n\n  try {\n    console.log(\"Intentando conectar\")\n      const accounts = await window.ethereum.request({'method':'eth_requestAccounts'})\n      console.log(accounts[0])\n  } catch (error) {\n    console.log(error)\n  }\n\n  }\n//react@\"^16.8\n  function disconnect(){\n    console.log(\"desconnect\")\n  }\n\n  function getBalanceOf(){\n    web3.eth.getBalance(myAddress).then((r)=>{\n      console.log(web3.utils.fromWei(r,'ether'))\n    })\n  }\n\n  function isConnected(){\n    if(window.ethereum.isConnected()){\n      alert(\"se\")\n    }else{\n      alert(\"No\")\n    }\n  }\n\n  return (\n    <div>\n      <button onClick={connect} >Connect</button>\n      No connected\n      <button onClick={disconnect}>Disconnect</button>\n\n      <button onClick={isConnected}>Is connect</button>\n\n      <button onClick={getBalanceOf}>Get Balance</button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}